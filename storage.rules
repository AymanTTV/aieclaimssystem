rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isManager() {
      return isAuthenticated() && 
        firestore.get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }

    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 5 * 1024 * 1024; // 5MB max
    }

    // Company logo
    match /company/logo {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        (isAdmin() || isManager()) &&
        isValidImage();
    }

    // Profile pictures
    match /profile-pictures/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin()) &&
        isValidImage();
    }

    // Add CORS headers to all responses
    function corsHeaders() {
      return response.headers = {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
        'Access-Control-Allow-Headers': 'Authorization, Content-Type',
        'Access-Control-Max-Age': '3600'
      };
    }
  }
}